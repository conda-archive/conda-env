#!/bin/bash

# Ensure that this script is sourced, not executed
# Also note that errors are ignored as `activate foo` doesn't generate a bad
# value for $0 which would cause errors.
if [[ -n $BASH_VERSION ]] && [[ "$(basename "$0" 2> /dev/null)" == "activate" ]]; then
    >&2 echo "Error: activate must be sourced. Run 'source activate envname'
instead of 'activate envname'.
"
    "$(dirname "$0")/conda" ..activate -h
    exit 1
fi

# Determine the filename of this script
_SCRIPT_LOCATION="${1}"

# Provide an absolute script location that resolves symlinks
_ABS_SCRIPT_LOCATION=${_SCRIPT_LOCATION}

while [ -h "$_ABS_SCRIPT_LOCATION" ]; do
    _DIR="$( cd -P "$(dirname $_ABS_SCRIPT_LOCATION)" && pwd )"
    _ABS_SCRIPT_LOCATION="$(readlink "$_ABS_SCRIPT_LOCATION")"
    [[ $_ABS_SCRIPT_LOCATION != /* ]] && _ABS_SCRIPT_LOCATION="$_DIR/$_ABS_SCRIPT_LOCATION"
done

_THIS_DIR=$(dirname "$_SCRIPT_LOCATION")

# Load common functions
get_dirname() {
    echo "$(cd "$(dirname "$1")" && pwd)"
}
source "$(get_dirname ${_ABS_SCRIPT_LOCATION})/_conda-functions"

if "$_THIS_DIR/conda" ..checkenv "$@"; then
    # Ensure we deactivate any scripts from the old env
    run_scripts "deactivate"

    _NEW_PATH=$("$_THIS_DIR/conda" ..deactivate)
    export PATH=$_NEW_PATH
    if (( $("$_THIS_DIR/conda" ..changeps1) )); then
        if [[ -n $CONDA_OLD_PS1 ]]; then
            PS1=$CONDA_OLD_PS1
            unset CONDA_OLD_PS1
        fi
    fi
else
    return 1
fi

_NEW_PATH=$("$_THIS_DIR/conda" ..activate "$@")
# If the conda call didn't fail, activate this script.
if (( $? == 0 )); then
    export PATH=$_NEW_PATH
    env="${2}"
    # If the string contains / it's a path
    if [[ "${env}" == */* ]]; then
        export CONDA_DEFAULT_ENV=$(get_abs_filename "${env}")
    else
        export CONDA_DEFAULT_ENV="${env}"
    fi

    if (( $("$_THIS_DIR/conda" ..changeps1) ));  then
            CONDA_OLD_PS1="$PS1"
            PS1="($CONDA_DEFAULT_ENV)$PS1"
    fi
else
    return $?
fi

# Load any of the scripts found $PREFIX/etc/conda/activate.d
run_scripts "activate"

# Hash the new environment for performance reasons.
if [[ -n $BASH_VERSION ]]; then
    hash -r
elif [[ -n $ZSH_VERSION ]]; then
    rehash
fi
